Python for Web Developers 
Learning Journal


Exercise 2.5: Django MVT Revisited

Learning Goals

? Add images to the model and display them on the frontend of your application
? Create complex views with access to the model
? Display records with views and templates


Reflection Questions

1. In your own words, explain Django static files and how Django handles them. Django static files are assets like CSS, JS, and images. Django manages them by allowing each app and the project itself to have a "static" directory. The `collectstatic` command consolidates these files for production. During development, Django serves static files directly, while in production, it's recommended to use a web server or CDN for better performance. Templates use the `{% static %}` template tag to reference static files. This structure simplifies the organization and deployment of static assets in Django projects.

2. Look up the following two Django packages on Django’s official documentation and/or other trusted sources. Write a brief description of each.


Package
Description
ListView
A Django class-based view that displays a list of objects retrieved from the database. It is commonly used to render a paginated list of items, such as blog posts or products.
DetailView
Another class-based view in Django, which renders the details of a single object retrieved from the database. It is often used for displaying the full details of a specific item, like a blog post or a user profile.


3. You’re now more than halfway through Achievement 2! Take a moment to reflect on your learning in the course so far. How is it going? What’s something you’re proud of so far? Is there something you’re struggling with? What do you need more practice with? The course is progressing well, and I'm proud of my understanding of Django and things relating to it. I find some advanced Django features challenging and would benefit from more practice with migrations. 

